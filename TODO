Debug the new entity replication framework

Add stuff for rendering entities

Add a client debugger
	Need some way to log messages
	Track entities/chunks

Switch http server to a different backend (preferrably using epoll)
	Mongoose is not very efficiently designed, and doesn't allow for things like persistent sockets/streaming
	Custom HTTP server may be best
		Desired features:
			epoll based implementation
			multithreaded (obviously)
			HTTP compression
			cache all static HTTP responses
			no extra memcpys!
			
User write/writev to do io, avoids blocking/extra work.

Implement HTTP streaming for heartbeat events!
	This would be awesome, but will probably be too expensive

Instead of usleep, use a realtime timer event in the main loop
	Should reduce pointless waiting and improve concurrency

Introduce some type of precompilation phase for the client code
	Javascript should be statically checked (to the extent that it is possible)
	Also:
		Minified
		Optimized
	Maybe try Closure from google?
	Other note: JSLint is a terrible tool, it seems to mostly enforce the author's own prejuidices while providing little in the way of any substantial performance/safety guarantees.
		Other lint style checkers seem to be equally terrible


Need to test code on other platforms:
	Firefox 4
	Opera
	(IE support is not going to happen, at least until MS commits to supporting webgl)


Big issues:
	How to conserve bandwidth?  Need some measurements to figure out how much we are using...


Add some fog to hide loading new chunks


Complete:

Implement some form of occlusion query to accelerate map loading. (done)
	Right now it uses the naive strategy of just grabbing all blocks in a radius
	Might be better to do something fancy like this:
		Every n frames:
			Render a low resolution version of the world onto a cube
				For each chunk within some large radius (say 10x10x10):
					If chunk is loaded, draw it with depth 0
					Otherwise, draw a cube at chunk location instead, colored by chunkID
			Read resulting texture back onto CPU
			For each pixel:
				If color is unloaded chunk,
				Issue fetch command for chunk

